{"version":3,"sources":["components/ImageGallery/ImgItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImgGalary.module.css","style.module.css","components/Button/Btn.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","API/Api.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","imgName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","styles","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","placeholder","name","onChange","Component","ImageGalleryItem","id","src","largeImg","alt","ImageGalleryItemImage","height","width","ImageGallery","images","onImgClick","onClick","map","webformatURL","largeImageURL","fetchImg","page","fetch","then","response","ok","json","Promise","reject","Error","propTypes","PropTypes","string","isRequired","api","Button","onBtnClick","text","btn","Modal","onKeydownClick","e","onCloseModal","code","window","addEventListener","removeEventListener","children","Overlay","Load","loader","color","timeout","React","App","isLoading","shouldScroll","currentImages","openModal","handleButton","fetchImages","handleSearchbarSubmit","OnLoadMore","prev","loaderToggle","target","nodeName","dataset","img","toggleModal","setTimeout","imgApi","prevState","hits","catch","finally","prevProps","length","scrollTo","top","document","documentElement","scrollHeight","behavior","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0fc1a9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImgItem_ImageGalleryItem__2KaB5\",\"ImageGalleryItem-image\":\"ImgItem_ImageGalleryItem-image__24iIK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImgGalary_ImageGallery__pH0GB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"style_App__1PElp\",\"ImageGallery\":\"style_ImageGallery__25uTC\",\"ImageGalleryItem\":\"style_ImageGalleryItem__1_yQS\",\"ImageGalleryItem-image\":\"style_ImageGalleryItem-image__1aDro\",\"Overlay\":\"style_Overlay__csboF\",\"Modal\":\"style_Modal__2Ot8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Btn_Button__1f8e3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1j2Bs\"};","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport styles from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    imgName: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({ imgName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.imgName.trim() === '') {\n      toast.error('Введите название картинки.');\n      return;\n    }\n\n    this.props.onSubmit(this.state.imgName);\n    this.setState({ imgName: '' });\n  };\n\n  render() {\n    return (\n      <header className={styles.Searchbar}>\n        <form onSubmit={this.handleSubmit} className={styles.SearchForm}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <span className={styles.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            //   autocomplete=\"off\"\n            //   autofocus\n            placeholder=\"Search images and photos\"\n            name=\"imgName\"\n            value={this.state.imgName}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;","import React from 'react';\nimport styles from './ImgItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ id, src, largeImg }) => (\n  <li className={styles.ImageGalleryItem} key={id}>\n    <img\n      src={src}\n      alt=\"\"\n      className={styles.ImageGalleryItemImage}\n      data-img={largeImg}\n      height=\"240\"\n      width=\"320\"\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  src: PropTypes.string.isRequired,\n  largeImg: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;","import ImageGalleryItem from './ImageGalleryItem';\nimport styles from './ImgGalary.module.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images, onImgClick }) => {\n  return (\n    <ul className={styles.ImageGallery} onClick={onImgClick}>\n      {images.map(({ id, webformatURL, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          src={webformatURL}\n          largeImg={largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;","import PropTypes from 'prop-types';\n// import axios from 'axios';\n\nfunction fetchImg(name, page) {\n  const key = '22022516-c571923560df7aebf84694af6';\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(`Нет картинки с именем ${name}`));\n  });\n}\n\nfetchImg.propTypes = {\n  name: PropTypes.string.isRequired,\n  page: PropTypes.string.isRequired,\n};\n\nconst api = {\n  fetchImg,\n};\n\nexport default api;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Btn.module.css';\n\nconst Button = ({ onBtnClick, text }) => (\n  <button className={styles.btn} type=\"button\" onClick={onBtnClick}>\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onCloseModal: PropTypes.func,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeydownClick);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeydownClick);\n  }\n\n  onKeydownClick = e => {\n    const { onCloseModal } = this.props;\n    if (e.code === 'Escape') {\n      onCloseModal();\n    }\n  };\n\n  render() {\n    const { children, onCloseModal } = this.props;\n    return (\n      <div className={styles.Overlay} onClick={onCloseModal}>\n        <div className={styles.Modal}>{children}</div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\n\nexport default class Load extends React.Component {\n  render() {\n    return (\n      <div className={styles.loader}>\n        <Loader\n          type=\"TailSpin\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          timeout={3000} //3 secs\n        />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport styles from './style.module.css';\nimport imgApi from './API/Api';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Load from './components/Loader/Loader';\n\nclass App extends React.Component {\n  state = {\n    imgName: '',\n    page: 1,\n    images: [],\n    error: null,\n    isLoading: false,\n    shouldScroll: false,\n    currentImages: '',\n    openModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.imgName;\n    const nextName = this.state.imgName;\n\n    if (prevName !== nextName) {\n      this.fetchImages();\n    }\n    if (this.state.images.length > 10) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  handleButton = () => {\n    this.fetchImages();\n    if (this.state.page > 1) {\n      this.setState({ shouldScroll: true });\n    }\n  };\n\n  handleSearchbarSubmit = imgName => {\n    this.setState({\n      imgName,\n      page: 1,\n      images: [],\n    });\n  };\n\n  OnLoadMore = () => {\n    this.setState(prev => ({\n      page: prev.page + 1,\n    }));\n    this.fetchImages();\n  };\n\n  loaderToggle = () => {\n    this.setState(prev => ({\n      isLoading: !prev.isLoading,\n    }));\n  };\n\n  onImgClick = e => {\n    if (e.target.nodeName !== 'IMG') {\n      return;\n    }\n    this.setState({\n      currentImages: e.target.dataset.img,\n    });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(prev => ({\n      openModal: !prev.openModal,\n    }));\n  };\n\n  fetchImages = () => {\n    this.loaderToggle();\n    return setTimeout(() => {\n      const { imgName, page } = this.state;\n      imgApi\n        .fetchImg(imgName, page)\n        .then(images =>\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images.hits],\n          })),\n        )\n        .catch(error => this.setState({ error: true }))\n        .finally(() => this.loaderToggle());\n    }, 1000);\n  };\n\n  render() {\n    const { images, isLoading, openModal, currentImages } = this.state;\n    return (\n      <div className={styles.App}>\n        <Searchbar onSubmit={this.handleSearchbarSubmit} />\n        <ImageGallery images={images} onImgClick={this.onImgClick} />\n        {isLoading && <Load />}\n        {images.length > 0 && !isLoading && (\n          <Button onBtnClick={this.OnLoadMore} text={'Загрузить еще'} />\n        )}\n        <ToastContainer autoClose={3000} />\n\n        {openModal && (\n          <Modal onCloseModal={this.toggleModal}>\n            <img src={currentImages} alt=\"Dont Worry Be Happy\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchForm-button\":\"Searchbar_SearchForm-button__3u-rY\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__2bzU3\",\"SearchForm-input\":\"Searchbar_SearchForm-input__j6qzO\"};"],"sourceRoot":""}